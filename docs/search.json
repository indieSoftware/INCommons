{"Structs/ActivityItem.html#/s:9INCommons12ActivityItemV5items10activities13excludedTypesACypd_SaySo10UIActivityCGSaySo0H4TypeaGtcfc":{"name":"init(items:activities:excludedTypes:)","abstract":"<p>The</p>","parent_name":"ActivityItem"},"Structs/ActivityItem.html":{"name":"ActivityItem","abstract":"<p>Represents an activity for presenting an ActivityView (Share sheet) via the <code>activitySheet</code> modifier</p>"},"Protocols/UIDeviceProviderType.html#/s:9INCommons20UIDeviceProviderTypeP18userInterfaceIdiomSo06UIUserfG0Vvp":{"name":"userInterfaceIdiom","abstract":"<p>The style of interface to use on the current device.</p>","parent_name":"UIDeviceProviderType"},"Protocols/UIDeviceProviderType.html#/s:9INCommons20UIDeviceProviderTypeP11isSimulatorSbvp":{"name":"isSimulator","abstract":"<p>Returns true if this code currently runs on the simulator, false when on a physical device.</p>","parent_name":"UIDeviceProviderType"},"Protocols/UIDeviceProviderType.html#/s:9INCommons20UIDeviceProviderTypeP17deviceOrientationSo0bF0Vvp":{"name":"deviceOrientation","abstract":"<p>The physical orientation of the device.</p>","parent_name":"UIDeviceProviderType"},"Protocols/AnyEquatable.html#/s:9INCommons12AnyEquatableP9isEqualToySbAaB_pF":{"name":"isEqualTo(_:)","abstract":"<p>Undocumented</p>","parent_name":"AnyEquatable"},"Protocols/AnyEquatable.html#/s:9INCommons12AnyEquatablePAASQRzrlE9isEqualToySbAaB_pF":{"name":"isEqualTo(_:)","parent_name":"AnyEquatable"},"Protocols/AnyEquatable.html":{"name":"AnyEquatable","abstract":"<p>A type erased Equatable conformance."},"Protocols/UIDeviceProviderType.html":{"name":"UIDeviceProviderType","abstract":"<p>The interface of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/UIDeviceProvider.html\">UIDeviceProvider</a></code> which can be used to inject different implementations."},"Functions.html#/s:9INCommons4withyxx_yxzXEtlF":{"name":"with(_:_:)","abstract":"<p>Provides a given object or struct to the block.</p>"},"Extensions/UIImage.html#/s:So7UIImageC9INCommonsE4viewABSgSo6UIViewC_tcfc":{"name":"init(view:)","abstract":"<p>Initializes an image with a view&rsquo;s content.</p>","parent_name":"UIImage"},"Extensions/UIEdgeInsets.html#/s:So12UIEdgeInsetsV9INCommonsE11directionalSo017NSDirectionalEdgeB0Vvp":{"name":"directional","abstract":"<p>Converts the <code>UIEdgeInsets</code> struct into a <code>NSDirectionalEdgeInsets</code> where the <code>left</code> value is treated as the <code>leading</code> and","parent_name":"UIEdgeInsets"},"Extensions/UIEdgeInsets.html#/s:So12UIEdgeInsetsV9INCommonsE3topyAB14CoreFoundation7CGFloatVF":{"name":"top(_:)","abstract":"<p>Returns a new edge insets with the value for <code>top</code> replaced.</p>","parent_name":"UIEdgeInsets"},"Extensions/UIEdgeInsets.html#/s:So12UIEdgeInsetsV9INCommonsE4leftyAB14CoreFoundation7CGFloatVF":{"name":"left(_:)","abstract":"<p>Returns a new edge insets with the value for <code>left</code> replaced.</p>","parent_name":"UIEdgeInsets"},"Extensions/UIEdgeInsets.html#/s:So12UIEdgeInsetsV9INCommonsE6bottomyAB14CoreFoundation7CGFloatVF":{"name":"bottom(_:)","abstract":"<p>Returns a new edge insets with the value for <code>bottom</code> replaced.</p>","parent_name":"UIEdgeInsets"},"Extensions/UIEdgeInsets.html#/s:So12UIEdgeInsetsV9INCommonsE5rightyAB14CoreFoundation7CGFloatVF":{"name":"right(_:)","abstract":"<p>Returns a new edge insets with the value for <code>right</code> replaced.</p>","parent_name":"UIEdgeInsets"},"Extensions/UIEdgeInsets.html#/s:So12UIEdgeInsetsV9INCommonsE8invertedABvp":{"name":"inverted","abstract":"<p>Inverts the edge insets.</p>","parent_name":"UIEdgeInsets"},"Extensions/UIDevice.html#/s:So8UIDeviceC9INCommonsE14setOrientationyySo011UIInterfaceD0VFZ":{"name":"setOrientation(_:)","abstract":"<p>Sets the orientation manually with force.</p>","parent_name":"UIDevice"},"Extensions/Data.html#/s:10Foundation4DataV9INCommonsE9asUIColorSo0E0CSgyF":{"name":"asUIColor()","abstract":"<p>Uses a <code>NSKeyedArchiver</code> to decode the color from a data object.</p>","parent_name":"Data"},"Extensions/UIColor/RgbaColor.html#/s:So7UIColorC9INCommonsE9RgbaColorV3red14CoreFoundation7CGFloatVvp":{"name":"red","abstract":"<p>Undocumented</p>","parent_name":"RgbaColor"},"Extensions/UIColor/RgbaColor.html#/s:So7UIColorC9INCommonsE9RgbaColorV5green14CoreFoundation7CGFloatVvp":{"name":"green","abstract":"<p>Undocumented</p>","parent_name":"RgbaColor"},"Extensions/UIColor/RgbaColor.html#/s:So7UIColorC9INCommonsE9RgbaColorV4blue14CoreFoundation7CGFloatVvp":{"name":"blue","abstract":"<p>Undocumented</p>","parent_name":"RgbaColor"},"Extensions/UIColor/RgbaColor.html#/s:So7UIColorC9INCommonsE9RgbaColorV5alpha14CoreFoundation7CGFloatVvp":{"name":"alpha","abstract":"<p>Undocumented</p>","parent_name":"RgbaColor"},"Extensions/UIColor/RgbaColor.html#/s:So7UIColorC9INCommonsE9RgbaColorV3red5green4blue5alphaAE14CoreFoundation7CGFloatV_A3Ltcfc":{"name":"init(red:green:blue:alpha:)","abstract":"<p>Undocumented</p>","parent_name":"RgbaColor"},"Extensions/UIColor.html#/s:So7UIColorC9INCommonsE6asData10Foundation0D0VSgyF":{"name":"asData()","abstract":"<p>Uses a <code>NSKeyedArchiver</code> to encode the color into a data object.</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC9INCommonsE6randomABvpZ":{"name":"random","abstract":"<p>A random opaque color.</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC9INCommonsE3hexABSgSS_tcfc":{"name":"init(hex:)","abstract":"<p>Creates a color from a hex string. Returns nil if the hex string is invalid.</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC9INCommonsE4rgbaA2bCE9RgbaColorV_tcfc":{"name":"init(rgba:)","abstract":"<p>Initializes a <code>UIColor</code> with a RGBA struct.</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC9INCommonsE9colorView7SwiftUI5ColorVvp":{"name":"colorView","abstract":"<p>Converts a UIColor into a SwiftUI Color view.</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC9INCommonsE9rgbaColorAbCE04RgbaD0VSgvp":{"name":"rgbaColor","abstract":"<p>Returns the rgba values of this color.</p>","parent_name":"UIColor"},"Extensions/UIColor/RgbaColor.html":{"name":"RgbaColor","abstract":"<p>A struct containing the RGBA values of a color.</p>","parent_name":"UIColor"},"Extensions/View.html#/s:7SwiftUI4ViewP9INCommonsE2if_9transformQrSb_qd__xXEtAaBRd__lF":{"name":"if(_:transform:)","abstract":"<p>Runs a transform block, but only if the condition is met, otherwise the view remains unchanged.</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP9INCommonsE2if_AE4elseQrSb_qd__xXEqd_0_xXEtAaBRd__AaBRd_0_r0_lF":{"name":"if(_:if:else:)","abstract":"<p>Runs one or the the other transform block depending on a condition.","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP9INCommonsE5ifLet_9transformQrqd__Sg_qd_0_x_qd__tXEtAaBRd_0_r0_lF":{"name":"ifLet(_:transform:)","abstract":"<p>Runs a transform block when an optional could be successfully unwrapped.","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP9INCommonsE5frame4size9alignmentQrSo6CGSizeV_AA9AlignmentVtF":{"name":"frame(size:alignment:)","abstract":"<p>Same as the <code>frame(width:height:alignment:)</code> modifier, but with a size provided which maps to width and height.</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP9INCommonsE13onFirstAppearyQryycF":{"name":"onFirstAppear(_:)","abstract":"<p>Executes the action when the view appears the first time.","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP9INCommonsE13activitySheet_24permittedArrowDirections10onCompleteQrAA7BindingVyAD12ActivityItemVSgG_So09UIPopoverH9DirectionVySo14UIActivityTypeaSg_SbSayypGSgs5Error_pSgtcSgtF":{"name":"activitySheet(_:permittedArrowDirections:onComplete:)","abstract":"<p>Presents an activity sheet when the associated <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ActivityItem.html\">ActivityItem</a></code> is present</p>","parent_name":"View"},"Extensions/TimeZone.html#/s:10Foundation8TimeZoneV9INCommonsE3utcACvpZ":{"name":"utc","abstract":"<p>Returns the <code>GMT</code> time zone which is equal to UTC.</p>","parent_name":"TimeZone"},"Extensions/TimeZone.html#/s:10Foundation8TimeZoneV9INCommonsE15testableCurrentACvpZ":{"name":"testableCurrent","abstract":"<p>Returns the <code>current</code> time zone, except in test mode where <code>UTC</code> is returned instead to prevent flaky tests.</p>","parent_name":"TimeZone"},"Extensions/Task.html#/s:ScT9INCommonss5NeverORszACRs_rlE5sleep7secondsySd_tYaKFZ":{"name":"sleep(seconds:)","abstract":"<p>Suspends the current task for the given duration in seconds.</p>","parent_name":"Task"},"Extensions/String.html#/s:SS9INCommonsE13base64EncodedSSSgvp":{"name":"base64Encoded","abstract":"<p>Returns the base64 encoded version, i.e. <code>&quot;FooBar&quot;.base64Encoded == &quot;Rm9vQmFy&quot;</code></p>","parent_name":"String"},"Extensions/String.html#/s:SS9INCommonsE13base64DecodedSSSgvp":{"name":"base64Decoded","abstract":"<p>Returns the base64 decoded version, i.e. <code>&quot;Rm9vQmFy&quot;.base64Decoded == &quot;FooBar&quot;</code></p>","parent_name":"String"},"Extensions/String.html#/s:SS9INCommonsE5emptySSvpZ":{"name":"empty","abstract":"<p>Represents the empty string <code>&quot;&quot;</code>.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9INCommonsE9truncated18numberOfCharactersSSSi_tF":{"name":"truncated(numberOfCharacters:)","abstract":"<p>Crops the string to a given number of characters, truncating the rest and replacing the last 3 characters with &lsquo;&hellip;&rsquo;.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9INCommonsE16firstCapitalizedSSvp":{"name":"firstCapitalized","abstract":"<p>Returns this string with the first character capitalized, leaving the rest unchanged.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9INCommonsE15firstUppercasedSSvp":{"name":"firstUppercased","abstract":"<p>Returns the string with the first character uppercased, leaving the rest unchanged.</p>","parent_name":"String"},"Extensions/ProcessInfo.html#/s:So13NSProcessInfoC9INCommonsE19isRunningInTestModeSbvpZ":{"name":"isRunningInTestMode","abstract":"<p>Returns true when the code is running in test mode, otherwise false.</p>","parent_name":"ProcessInfo"},"Extensions/Optional.html#/s:Sq9INCommonsE11stringifiedyS2SF":{"name":"stringified(_:)","abstract":"<p>Unwraps this optional and converts its value into a string via <code>String(describing:)</code> or returns the fallback string if the optional is nil.</p>","parent_name":"Optional"},"Extensions/Locale.html#/s:10Foundation6LocaleV9INCommonsE9enUsPosixACvpZ":{"name":"enUsPosix","abstract":"<p>Returns the Locale with the identifier <code>en_US_POSIX</code>.</p>","parent_name":"Locale"},"Extensions/Locale.html#/s:10Foundation6LocaleV9INCommonsE15testableCurrentACvpZ":{"name":"testableCurrent","abstract":"<p>Returns the <code>current</code> locale, except in test mode where <code><a href=\"36f8f5912051ae747ef441d6511ca4cbExtensions/Locale.html#/s:10Foundation6LocaleV9INCommonsE9enUsPosixACvpZ\">enUsPosix</a></code> is returned instead to prevent flaky tests.</p>","parent_name":"Locale"},"Extensions/Int.html#/s:Si9INCommonsE26secondsToMinutesAndSecondsSi7minutes_Si0B0tyF":{"name":"secondsToMinutesAndSeconds()","abstract":"<p>Converts a value in seconds into a tuple of minutes and seconds, e.g. 99 → (1, 39).</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si9INCommonsE17toTwoDigitsStringSSyF":{"name":"toTwoDigitsString()","abstract":"<p>Adds leading zero to Int if needed, e.g. 5 → 05, 15 → 15, -5 → -05</p>","parent_name":"Int"},"Extensions/FileManager.html#/s:So13NSFileManagerC9INCommonsE13homeDirectory10Foundation3URLVvpZ":{"name":"homeDirectory","abstract":"<p>Returns the application&rsquo;s home directory.</p>","parent_name":"FileManager"},"Extensions/FileManager.html#/s:So13NSFileManagerC9INCommonsE18documentsDirectory10Foundation3URLVvpZ":{"name":"documentsDirectory","abstract":"<p>Returns the app&rsquo;s <code>Documents</code> directory.</p>","parent_name":"FileManager"},"Extensions/FileManager.html#/s:So13NSFileManagerC9INCommonsE15cachesDirectory10Foundation3URLVvpZ":{"name":"cachesDirectory","abstract":"<p>Returns the app&rsquo;s <code>Library/Caches</code> directory.</p>","parent_name":"FileManager"},"Extensions/FileManager.html#/s:So13NSFileManagerC9INCommonsE19appSupportDirectory10Foundation3URLVvpZ":{"name":"appSupportDirectory","abstract":"<p>Returns the app&rsquo;s <code>Library/Application Support</code> directory.</p>","parent_name":"FileManager"},"Extensions/FileManager.html#/s:So13NSFileManagerC9INCommonsE12tmpDirectory10Foundation3URLVvpZ":{"name":"tmpDirectory","abstract":"<p>Returns the application&rsquo;s <code>tmp</code> directory.</p>","parent_name":"FileManager"},"Extensions/EdgeInsets.html#/s:7SwiftUI10EdgeInsetsV9INCommonsE10horizontal8verticalAC14CoreFoundation7CGFloatV_AItcfc":{"name":"init(horizontal:vertical:)","abstract":"<p>A constructor where the edges for vertical are equal and those for horizontal also.</p>","parent_name":"EdgeInsets"},"Extensions/EdgeInsets.html#/s:7SwiftUI10EdgeInsetsV9INCommonsE4zeroACvpZ":{"name":"zero","abstract":"<p>An edge insets with a value of zero for all edges.</p>","parent_name":"EdgeInsets"},"Extensions/Double.html#/s:Sd9INCommonsE20dispatchTimeInterval8Dispatch0ecD0Ovp":{"name":"dispatchTimeInterval","abstract":"<p>Converts a <code>Double</code> value given in seconds into a <code>DispatchTimeInterval.milliseconds</code> value.</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd9INCommonsE12timeIntervalSdvp":{"name":"timeInterval","abstract":"<p>Converts a <code>Double</code> value into a <code>TimeInterval</code> value.</p>","parent_name":"Double"},"Extensions/DispatchQueue.html#/s:So17OS_dispatch_queueC9INCommonsE4once5token5blockySS_yyYbctFZ":{"name":"once(token:block:)","abstract":"<p>Executes a block of code, associated with a unique token, only once.</p>","parent_name":"DispatchQueue"},"Extensions/MutableCollection.html#/s:SM9INCommonsE4safe7ElementQzSg5IndexQz_tcip":{"name":"subscript(safe:)","abstract":"<p>Undocumented</p>","parent_name":"MutableCollection"},"Extensions/Collection.html#/s:Sl9INCommonsE15enumeratedArraySaySi6offset_7ElementQz7elementtGyF":{"name":"enumeratedArray()","abstract":"<p>Wraps the result from an <code>enumerated</code> call in an <code>Array</code>.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:Sl9INCommonsE4safe7ElementQzSg5IndexQz_tcip":{"name":"subscript(safe:)","abstract":"<p>Returns the element at the specified index if it is within bounds, otherwise nil.</p>","parent_name":"Collection"},"Extensions/Calendar.html#/s:10Foundation8CalendarV9INCommonsE9gregorianACvpZ":{"name":"gregorian","abstract":"<p>A cached gregorian calendar.</p>","parent_name":"Calendar"},"Extensions/Calendar.html#/s:10Foundation8CalendarV9INCommonsE15testableCurrentACvpZ":{"name":"testableCurrent","abstract":"<p>Returns the <code>current</code> calendar, except in test mode where <code><a href=\"36f8f5912051ae747ef441d6511ca4cbExtensions/Calendar.html#/s:10Foundation8CalendarV9INCommonsE9gregorianACvpZ\">gregorian</a></code> is returned instead to prevent flaky tests.</p>","parent_name":"Calendar"},"Extensions/CGFloat.html#/s:14CoreFoundation7CGFloatV9INCommonsE12screenHeightACvpZ":{"name":"screenHeight","abstract":"<p>Main screen bounds height</p>","parent_name":"CGFloat"},"Extensions/CGFloat.html#/s:14CoreFoundation7CGFloatV9INCommonsE11screenWidthACvpZ":{"name":"screenWidth","abstract":"<p>Main screen bounds width</p>","parent_name":"CGFloat"},"Extensions/Bundle.html#/s:So8NSBundleC9INCommonsE13versionNumberSSvp":{"name":"versionNumber","abstract":"<p>Returns the application version number (<code>CFBundleShortVersionString</code>), e.g.: &ldquo;1.0&rdquo;.</p>","parent_name":"Bundle"},"Extensions/Bundle.html#/s:So8NSBundleC9INCommonsE11buildNumberSSvp":{"name":"buildNumber","abstract":"<p>Returns the application build number (<code>CFBundleVersion</code>), e.g.: &ldquo;42&rdquo;.</p>","parent_name":"Bundle"},"Extensions/Bundle.html":{"name":"Bundle"},"Extensions/CGFloat.html":{"name":"CGFloat"},"Extensions/Calendar.html":{"name":"Calendar"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/MutableCollection.html":{"name":"MutableCollection"},"Extensions/DispatchQueue.html":{"name":"DispatchQueue"},"Extensions/Double.html":{"name":"Double"},"Extensions/EdgeInsets.html":{"name":"EdgeInsets"},"Extensions/FileManager.html":{"name":"FileManager"},"Extensions/Int.html":{"name":"Int"},"Extensions/Locale.html":{"name":"Locale"},"Extensions/Optional.html":{"name":"Optional"},"Extensions/ProcessInfo.html":{"name":"ProcessInfo"},"Extensions/String.html":{"name":"String"},"Extensions/Task.html":{"name":"Task"},"Extensions/TimeZone.html":{"name":"TimeZone"},"Extensions/View.html":{"name":"View"},"Extensions/UIColor.html":{"name":"UIColor"},"Extensions/Data.html":{"name":"Data"},"Extensions/UIDevice.html":{"name":"UIDevice"},"Extensions/UIEdgeInsets.html":{"name":"UIEdgeInsets"},"Extensions/UIImage.html":{"name":"UIImage"},"Enums/ConfigLoader/Error.html#/s:9INCommons12ConfigLoaderO5ErrorO12fileNotFoundyA2EmF":{"name":"fileNotFound","abstract":"<p>No config file with the given name could be found in the provided bundle.</p>","parent_name":"Error"},"Enums/ConfigLoader/Error.html#/s:9INCommons12ConfigLoaderO5ErrorO15fileNotLoadableyA2EmF":{"name":"fileNotLoadable","abstract":"<p>The config file couldn&rsquo;t be loaded for any reason.</p>","parent_name":"Error"},"Enums/ConfigLoader/Error.html#/s:9INCommons12ConfigLoaderO5ErrorO18configNotDecodableyA2EmF":{"name":"configNotDecodable","abstract":"<p>The provided model&rsquo;s type doesn&rsquo;t match the config&rsquo;s structure and thus couldn&rsquo;t be decoded.</p>","parent_name":"Error"},"Enums/ConfigLoader.html#/s:9INCommons12ConfigLoaderO0B4NameSSvpZ":{"name":"ConfigName","abstract":"<p>The name of the config plist file in the bundle, equals to <code>Config.plist</code>.</p>","parent_name":"ConfigLoader"},"Enums/ConfigLoader/Error.html":{"name":"Error","abstract":"<p>The errors which might occur during parsing a config file.</p>","parent_name":"ConfigLoader"},"Enums/ConfigLoader.html#/s:9INCommons12ConfigLoaderO05parseB05named6bundles6ResultOyxAC5ErrorOGSS_So8NSBundleCtSeRzlFZ":{"name":"parseConfig(named:bundle:)","abstract":"<p>Parses the config file into its model.</p>","parent_name":"ConfigLoader"},"Enums/ConfigLoader.html":{"name":"ConfigLoader","abstract":"<p>A helper to load a configuration plist file and mapping it to its model."},"Classes/UIDeviceProviderMock.html#/s:9INCommons20UIDeviceProviderTypeP18userInterfaceIdiomSo06UIUserfG0Vvp":{"name":"userInterfaceIdiom","parent_name":"UIDeviceProviderMock"},"Classes/UIDeviceProviderMock.html#/s:9INCommons20UIDeviceProviderTypeP11isSimulatorSbvp":{"name":"isSimulator","parent_name":"UIDeviceProviderMock"},"Classes/UIDeviceProviderMock.html#/s:9INCommons20UIDeviceProviderTypeP17deviceOrientationSo0bF0Vvp":{"name":"deviceOrientation","parent_name":"UIDeviceProviderMock"},"Classes/UIDeviceProviderMock.html#/s:9INCommons20UIDeviceProviderMockC9interface9simulator11orientationACSo20UIUserInterfaceIdiomV_SbSo0B11OrientationVtcfc":{"name":"init(interface:simulator:orientation:)","abstract":"<p>Creates a mock instance.</p>","parent_name":"UIDeviceProviderMock"},"Classes/UIDeviceProvider.html#/s:9INCommons16UIDeviceProviderCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"UIDeviceProvider"},"Classes/UIDeviceProvider.html#/s:9INCommons20UIDeviceProviderTypeP18userInterfaceIdiomSo06UIUserfG0Vvp":{"name":"userInterfaceIdiom","parent_name":"UIDeviceProvider"},"Classes/UIDeviceProvider.html#/s:9INCommons20UIDeviceProviderTypeP11isSimulatorSbvp":{"name":"isSimulator","parent_name":"UIDeviceProvider"},"Classes/UIDeviceProvider.html#/s:9INCommons20UIDeviceProviderTypeP17deviceOrientationSo0bF0Vvp":{"name":"deviceOrientation","parent_name":"UIDeviceProvider"},"Classes/UIDeviceProvider.html":{"name":"UIDeviceProvider","abstract":"<p>A concrete implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/UIDeviceProviderType.html\">UIDeviceProviderType</a></code> protocol which can be used in app code"},"Classes/UIDeviceProviderMock.html":{"name":"UIDeviceProviderMock","abstract":"<p>A mock implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/UIDeviceProviderType.html\">UIDeviceProviderType</a></code> protocol which can be used in UnitTests"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}